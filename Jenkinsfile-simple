pipeline {
    agent any
    
    environment {
        DOCKER_IMAGE = 'news-recommender'
        CONTAINER_NAME = 'news-app'
        PORT = '5000'
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out source code...'
                checkout scm
            }
        }
        
        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                sh 'docker build -t ${DOCKER_IMAGE} .'
            }
        }
        
        stage('Deploy') {
            steps {
                echo 'Deploying application...'
                sh '''
                    # Stop and remove existing container
                    docker stop ${CONTAINER_NAME} || echo "Container not running"
                    docker rm ${CONTAINER_NAME} || echo "Container not found"
                    
                    # Run new container
                    docker run -d \
                        --name ${CONTAINER_NAME} \
                        -p ${PORT}:${PORT} \
                        -v ${WORKSPACE}/Dataset:/app/Dataset \
                        ${DOCKER_IMAGE}
                '''
            }
        }
        
        stage('Health Check') {
            steps {
                echo 'Checking application health...'
                sh '''
                    echo "Waiting for application to start..."
                    sleep 60
                    
                    # Check if container is running
                    docker ps | grep ${CONTAINER_NAME}
                    
                    # Test health endpoint
                    curl -f http://localhost:${PORT}/api/health || echo "Health check failed"
                '''
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline succeeded! üéâ'
            sh '''
                echo "=== DEPLOYMENT SUCCESSFUL ==="
                echo "Application URL: http://localhost:${PORT}"
                echo "Container Name: ${CONTAINER_NAME}"
                echo "================================"
            '''
        }
        
        failure {
            echo 'Pipeline failed! ‚ùå'
            sh '''
                echo "=== DEPLOYMENT FAILED ==="
                docker logs ${CONTAINER_NAME} || echo "No container logs available"
                echo "=========================="
            '''
        }
    }
} 